/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.44
 * Generated at: 2021-04-07 03:05:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.addr;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	Connection con;
	Statement stmt;
	String sql = "select * from ADDRESS order by SEQ desc";
    public void jspInit(){ //첫번째 요청에의해 메모리에 올라갈 때 
		try{
			Class.forName("oracle.jdbc.driver.OracleDriver"); //oracle 
			//Class.forName("com.mysql.jdbc.Driver"); //mysql 
			System.out.println("(1) driver loading");

			String url = "jdbc:oracle:thin:@127.0.0.1:1521:JAVA"; //oracle
			//String url = "jdbc:mysql://localhost:3306/schemaName"; //mysql
			con = DriverManager.getConnection(url, "scott", "tiger"); //oracle 
			//con = DriverManager.getConnection(url, "user","pwd"); //mysql
			System.out.println("(2) con: " + con);

			stmt = con.createStatement();
			System.out.println("(3) stmt: " +stmt);
		}catch(ClassNotFoundException cf){
			System.out.println("(1) cf:" + cf);
		}catch(SQLException se){
			System.out.println("(2) se" + se);
			System.out.println("(3) se" + se);
		}
    } 
	public void jspDestroy(){//메모리에 올라갈 때( 페이지가 갱신, 서버에 정책 )
		try{
			if(stmt != null) stmt.close();
			if(con != null) con.close();
			System.out.println("(5) 연결 객체를 닫기 성공");
		}catch(SQLException se){}
    } 

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<style>\r\n");
      out.write("\ttable, th, td {\r\n");
      out.write("\t   border: 1px solid black;\r\n");
      out.write("\t   border-collapse: collapse;\r\n");
      out.write("\t}\r\n");
      out.write("\tth, td {\r\n");
      out.write("\t   padding: 5px;\r\n");
      out.write("\t}\r\n");
      out.write("\ta { text-decoration:none }\r\n");
      out.write("</style>\r\n");
      out.write("<center>\r\n");
      out.write("\t<h1>\r\n");
      out.write("\t\tAddress List \r\n");
      out.write("\t</h1>\r\n");
      out.write("\t<a href=\"../\">인덱스</a>\r\n");
      out.write("\t&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t<a href=\"input.jsp\">입력폼</a>\r\n");
      out.write("\t<table border='1' cellpadding=\"7\" cellspacing=\"2\" width=\"50%\">\r\n");
      out.write("\t    <tr>\r\n");
      out.write("\t\t    <th>번호</th>\r\n");
      out.write("\t\t\t<th>이름</th>\r\n");
      out.write("\t\t\t<th>주소</th>\r\n");
      out.write("\t\t\t<th>날짜</th>\r\n");
      out.write("\t\t\t<th>삭제</th>\r\n");
      out.write("\t\t</tr>\r\n");
   
        ResultSet rs = null;
        try{
		   rs = stmt.executeQuery(sql); //DQL 
		   while(rs.next()){
				long seq = rs.getLong(1);
				String name = rs.getString(2);
				String addr = rs.getString(3);
				Date rdate = rs.getDate(4);

      out.write(" \r\n");
      out.write("                <tr>\r\n");
      out.write("\t\t\t\t\t<td align='center'>");
      out.print(seq);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(name);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(addr);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(rdate);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td align='center'><a href='del.jsp?seq=");
      out.print(seq);
      out.write("'>삭제</a></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");

		   }
		}catch(SQLException se){
			System.out.println("se: " + se);
		}finally{
			try{
			    if(rs != null) rs.close();
			}catch(SQLException se){}
		}

      out.write("\t\r\n");
      out.write("\t</table>\r\n");
      out.write("</center>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
